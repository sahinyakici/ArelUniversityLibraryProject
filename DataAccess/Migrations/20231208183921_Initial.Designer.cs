// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(PostgreContext))]
    [Migration("20231208183921_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<Guid>("OperationClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OperationClaimId");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            OperationClaimId = new Guid("7b741a82-91d0-4b14-a4d0-39ed004ee683"),
                            Name = "admin"
                        },
                        new
                        {
                            OperationClaimId = new Guid("11e2f8be-03a3-437d-ba2d-c1488c637bd1"),
                            Name = "user"
                        },
                        new
                        {
                            OperationClaimId = new Guid("e252a4c7-c155-4211-a058-0f26ab9694ea"),
                            Name = "editor"
                        },
                        new
                        {
                            OperationClaimId = new Guid("746dbd86-8904-4e9f-9823-16e245b64c86"),
                            Name = "books.add"
                        },
                        new
                        {
                            OperationClaimId = new Guid("d1a05c36-dbf1-4742-8efd-82400debd807"),
                            Name = "books.edit"
                        },
                        new
                        {
                            OperationClaimId = new Guid("6b900665-7b6d-4580-b9e0-378d78abbb2a"),
                            Name = "books.delete"
                        },
                        new
                        {
                            OperationClaimId = new Guid("411b1c3b-2423-42e0-960f-1b8736f1ce19"),
                            Name = "books.update"
                        },
                        new
                        {
                            OperationClaimId = new Guid("bfa4144b-161b-45df-9e5e-986b1ab4d59b"),
                            Name = "authors.add"
                        },
                        new
                        {
                            OperationClaimId = new Guid("8a0c7825-3500-4871-9b62-3f7fb6d3f60f"),
                            Name = "authors.edit"
                        },
                        new
                        {
                            OperationClaimId = new Guid("22478ec9-32ff-4c0d-b044-52deedf7f704"),
                            Name = "authors.delete"
                        },
                        new
                        {
                            OperationClaimId = new Guid("c8fc5563-24ab-4ac2-b416-23d7dab7fa2b"),
                            Name = "authors.update"
                        },
                        new
                        {
                            OperationClaimId = new Guid("ae3a7d84-6987-4d50-94c5-4be69c019200"),
                            Name = "genres.add"
                        },
                        new
                        {
                            OperationClaimId = new Guid("16330cdc-380a-422b-918f-ff8e1c6300aa"),
                            Name = "genres.edit"
                        },
                        new
                        {
                            OperationClaimId = new Guid("3afeba83-b9c0-4ecf-8388-b70fbf30d55b"),
                            Name = "genres.delete"
                        },
                        new
                        {
                            OperationClaimId = new Guid("99915bf4-ea32-4b11-9b20-aed6d5e01013"),
                            Name = "genres.update"
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<Guid>("UserOperationClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OperationClaimId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("UserOperationClaimId");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Entities.Concrete.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Money")
                        .HasColumnType("real");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("PageSize")
                        .HasColumnType("integer");

                    b.Property<bool>("RentStatus")
                        .HasColumnType("boolean");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Entities.Concrete.Genre", b =>
                {
                    b.Property<Guid>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = new Guid("8d0e92d9-dfba-4403-b514-e31f2434d67d"),
                            GenreName = "Dünya Klasikleri",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("b74795fb-4ae2-474c-97f9-f1799109a7ac"),
                            GenreName = "Aşk",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("48c4fc83-7ec8-4a23-9355-d7bad7afd24d"),
                            GenreName = "Roman",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("5b589ba4-34c4-4f4e-8ff7-70ce1a3e3b3f"),
                            GenreName = "Psikoloji",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("2c8f0e29-fc1c-4e5e-b554-685cf8d7a4d3"),
                            GenreName = "Söylev",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("8fcccf91-bf68-4e65-a573-b520a033c902"),
                            GenreName = "Dini",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("85f647c6-b054-4d8e-8cfa-a6a8caeb08d7"),
                            GenreName = "Tarihj",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("43db7a16-180f-4b08-b0a7-c78e217ae71c"),
                            GenreName = "Korku-Gerilim",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("7d09a7aa-0d78-4d19-b2ca-c4a6e8b9bf65"),
                            GenreName = "Aksiyon",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("5ae9edb2-827e-45e0-b045-ed26d73ed81f"),
                            GenreName = "Kişisel Gelişim",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("e427670a-5c82-4306-9b16-ec95d5edd9bf"),
                            GenreName = "Şiir",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("a93f7ac6-731e-4411-933a-1a25871f8ccd"),
                            GenreName = "Macera-Aksiyon",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("9fa69cf5-3718-4916-af06-892edaa16d35"),
                            GenreName = "Felsefe-Düşünce",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("2b6abd6f-9566-4350-8a2c-4252337f179c"),
                            GenreName = "Edebiyat",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("3453973f-468e-4553-b125-71edba802bd9"),
                            GenreName = "Bilim-Kurgu",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("97457d3a-6474-4612-acc5-65b46547dd22"),
                            GenreName = "Hikaye (Öykü)",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("966e07ee-ad95-4811-ac81-618e0adfa1e1"),
                            GenreName = "Sosyoloji",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("94f73933-c7ef-4447-8042-a8a7644cca98"),
                            GenreName = "Biyografi",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("16f76991-4e7c-4553-9a48-c7314929816b"),
                            GenreName = "Araştırma-İnceleme",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("3be6eff2-c95e-4019-a377-ebef4fda5b50"),
                            GenreName = "Manga",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("3764f862-335d-4ae6-81e8-156b23f4466f"),
                            GenreName = "Ekonomi-İş Dünyası",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("e04bdb83-790a-4f82-a050-f811f0d1e683"),
                            GenreName = "Masal",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("d1b83563-2e9c-45f6-940d-0b270075f3ec"),
                            GenreName = "Eğlence-Mizah",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("c57961a1-8ee4-4531-b69f-5c055401b8b0"),
                            GenreName = "Sağlık-Tıp",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("8fc820ba-e985-4070-abe9-75b130c19d84"),
                            GenreName = "İnsan ve Toplum",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("f344800a-5686-49e3-ae93-2d0d621fd7c6"),
                            GenreName = "Çizgi-Roman",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("0033d33a-14e0-405d-98cb-0845869b4cd4"),
                            GenreName = "Eğitim",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("90025eb2-0499-4d4b-adf3-1b5d5119bfa8"),
                            GenreName = "Tiyatro",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("94dc6f3f-9118-46ea-9a25-1207b6e75d0b"),
                            GenreName = "Hukuk",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("fc1fbbbb-c63a-45a7-826c-78910849f1fc"),
                            GenreName = "Sanat",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("61b39f62-1b5e-464c-b893-85b19fa85cf2"),
                            GenreName = "Antropoloji-Etnoloji",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("0d575337-7693-4525-b837-c388294c95e2"),
                            GenreName = "Spor",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("5aeae4ad-ddb6-4388-a564-2ece1df2c4a6"),
                            GenreName = "Gezi",
                            IsDeleted = false
                        },
                        new
                        {
                            GenreId = new Guid("a654c1e5-e124-4116-ba7a-e98cea45cc3b"),
                            GenreName = "Anlatı",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<float?>("RentalPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("RentalStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RentalStop")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("RentalId");

                    b.ToTable("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
